Desenvolver um Serviço de Compartilhamento de Arquivos P2P: 
O objetivo principal é criar um serviço funcional de compartilhamento de arquivos peer-to-peer.

Implementar Protocolo de Transferência com Base no UDP: 
Desenvolver um protocolo de transferência de arquivos que funcione sobre o protocolo UDP para garantir bom desempenho.

Divisão de Arquivos em Blocos: 
Garantir que os arquivos sejam divididos em blocos identificados, permitindo o download paralelo de múltiplas fontes.

Recuperação de Blocos Perdidos: 
Implementar um mecanismo para a recuperação de blocos perdidos durante a transferência, emulando a confiabilidade do TCP.

Conexão ao FS_Tracker: 
Criar a funcionalidade que permite que os nós FS_Node se conectem ao servidor de registro de conteúdo FS_Tracker e informem sobre os arquivos ou blocos disponíveis em suas pastas compartilhadas.

Implementar o FS Track Protocol: 
Desenvolver o protocolo de localização de conteúdos usado na interação entre os FS_Node e o FS_Tracker, funcionando sobre uma conexão TCP confiável.

Implementar o FS Transfer Protocol: 
Criar o protocolo de transferência que regula as interações de troca de dados entre os FS_Node, funcionando sobre UDP para maior eficiência.

Seleção de Nós e Escalonamento de Transferência: 
Desenvolver um algoritmo para selecionar nós apropriados e agendar a transferência eficiente dos vários blocos que compõem os arquivos.

Segurança e Privacidade: 
Implementar medidas de segurança, autenticação e privacidade para proteger os usuários na rede P2P.

Monitoramento da Rede e Priorização de Peers: 
Implementar um sistema de monitoramento da rede que priorize os usuários que oferecem as melhores condições de transferência para o arquivo desejado.



ARQUITETURA

Divisão em Componentes:
Comece dividindo o sistema em componentes distintos. Por exemplo, você pode ter componentes para o nó do cliente (FS_Node), o servidor de registro de conteúdo (FS_Tracker), a rede P2P, e os protocolos de transferência e localização de conteúdo.

Camadas da Aplicação:
Considere organizar seu sistema em camadas, como a camada de interface do usuário, camada de lógica de negócios e camada de acesso à rede. Isso ajuda a manter o código organizado.

Arquitetura Cliente-Servidor:
Seu nó FS_Node deve atuar como tanto cliente quanto servidor. Projete essa funcionalidade para permitir que os nós compartilhem arquivos e informações com o FS_Tracker e outros nós.

Estrutura da Rede P2P:
Defina a estrutura da sua rede P2P. Isso pode ser uma rede completamente descentralizada, onde todos os nós são iguais, ou uma estrutura híbrida com nós superiores (superpeers) que auxiliam na descoberta de recursos.

Protocolos de Comunicação:
Especifique os protocolos de comunicação, incluindo o FS Track Protocol para interações com o FS_Tracker (usando TCP) e o FS Transfer Protocol para transferência de blocos (usando UDP com capacidade de recuperação de erros).

Divisão de Arquivos em Blocos:
Decida como os arquivos serão divididos em blocos e como esses blocos serão identificados. Isso é essencial para permitir o download paralelo de várias fontes.

Monitoramento e Manutenção:
Projete um sistema de monitoramento que ajude a identificar problemas e inatividade nos nós. Planeje também como os nós inativos serão tratados e removidos.

Interfaces de Usuário:
Desenvolva interfaces de usuário para o FS_Node que permitam aos usuários interagir com o sistema, compartilhar arquivos e controlar as transferências.